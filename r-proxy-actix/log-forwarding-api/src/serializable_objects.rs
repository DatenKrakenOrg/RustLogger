use chrono::{DateTime, Utc};
use serde::{Deserialize, Serialize};
#[derive(Debug, Deserialize, Serialize)]
#[serde(rename_all = "UPPERCASE")]
pub enum LogLevel {
    Critical,
    Warn,
    Info,
}

#[derive(Debug, Deserialize, Serialize)]
pub struct InnerMsg {
    pub device: String,
    pub msg: String,
    pub exceeded_values: Vec<bool>,
}

/// This struct matches the log json generated by the LogGen component
#[derive(Debug, Deserialize, Serialize)]
pub struct LogEntry {
    pub timestamp: DateTime<Utc>,
    pub level: LogLevel,
    pub temperature: f64,
    pub humidity: f64,
    pub msg: InnerMsg,
}

#[derive(Debug, Deserialize)]
pub struct LogQuery {
    pub limit: Option<usize>,
    pub offset: Option<usize>,
    pub level: Option<String>,
    pub device: Option<String>,
    pub from: Option<DateTime<Utc>>,
    pub to: Option<DateTime<Utc>>,
}

#[derive(Debug, Deserialize)]
pub struct SearchQuery {
    pub query: String,
    pub limit: Option<usize>,
    pub offset: Option<usize>,
}
