use crate::log_entry_components::{InnerMsg, LogLevel};
use chrono::{DateTime, Utc};
use serde::{Deserialize, Serialize};
use serde_json::{Value};
pub trait ElasticLogDocument {
    fn to_document_json(&self) -> Result<Value, serde_json::Error>;
}

/// This struct matches the log json generated by the LogGen component
#[derive(Debug, Deserialize, Serialize)]
pub struct LogEntry {
    timestamp: DateTime<Utc>,
    level: LogLevel,
    temperature: f64,
    humidity: f64,
    msg: InnerMsg,
}
impl ElasticLogDocument for LogEntry {
    fn to_document_json(&self) -> Result<Value, serde_json::Error> {
        serde_json::to_value(self)
    }
}

#[derive(Debug, Deserialize, Serialize)]
pub struct ContainerLogEntry {
    timestamp: DateTime<Utc>,
    container_name: String,
    log_message: String,
}

impl ElasticLogDocument for ContainerLogEntry {
    fn to_document_json(&self) -> Result<Value, serde_json::Error> {
        serde_json::to_value(self)
    }
}
